{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/TIBCOSoftware/GraphBuilder_Tools/activity/accumulator",
        "github.com/TIBCOSoftware/GraphBuilder/activity/builder",
        "github.com/TIBCOSoftware/GraphBuilder_dgraph/activity/dgraphupsert",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/trigger/consumer",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array"
    ],
    "name": "IoTData_Kafka_Dgraph",
    "description": " ",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.9.0",
    "triggers": [
        {
            "ref": "#consumer",
            "name": "tibco-kafka-consumer-trigger",
            "description": "",
            "settings": {
                "kafkaConnection": {
                    "id": "953c2730-5383-11ea-a293-73298142a997",
                    "type": "flogo:connector",
                    "version": "1.1.1",
                    "name": "tibco-kafka",
                    "hashTags": [],
                    "inputMappings": {},
                    "outputMappings": {},
                    "iteratorMappings": {},
                    "title": "Apache Kafka Client Configuration",
                    "description": "",
                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka",
                    "settings": [
                        {
                            "name": "name",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Name",
                                "description": "Name of the configuration"
                            },
                            "value": "IoTKafka"
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "display": {
                                "name": "Description",
                                "description": "Connection description"
                            },
                            "value": "Apache Kafka client configuration"
                        },
                        {
                            "name": "brokers",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Brokers",
                                "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.IoTKafka.Brokers\"]"
                        },
                        {
                            "name": "authMode",
                            "type": "string",
                            "display": {
                                "name": "Auth Mode",
                                "description": "Choose authentication mode to connect to Kafka cluster"
                            },
                            "allowed": [
                                "None",
                                "SASL/PLAIN",
                                "SSL"
                            ],
                            "value": "None"
                        },
                        {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "User Name",
                                "visible": false,
                                "description": "User name for SASL authentication",
                                "appPropertySupport": true,
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Password",
                                "type": "password",
                                "visible": false,
                                "description": "Password for SASL authentication",
                                "appPropertySupport": true,
                                "readonly": false,
                                "valid": true
                            },
                            "value": "SECRET:YmretKysu5x2XAGlRYuOVw=="
                        },
                        {
                            "name": "clientCert",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded certificate file",
                                "name": "Client Certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientKey",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded private key file",
                                "name": "Client Key",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt",
                                    ".key"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "caCert",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded CA or Server certificate file",
                                "name": "CA or Server Certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "connectionTimeout",
                            "type": "integer",
                            "display": {
                                "name": "Connection Timeout",
                                "description": "The amount of time in seconds to wait for the initial connection",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.IoTKafka.Connection_Timeout\"]"
                        },
                        {
                            "name": "retryBackoff",
                            "type": "integer",
                            "display": {
                                "name": "Retry Backoff",
                                "description": "The amount of time in milliseconds to wait for leader election to occur before retrying",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.IoTKafka.Retry_Backoff\"]"
                        },
                        {
                            "name": "retryMax",
                            "type": "integer",
                            "display": {
                                "name": "Max Retry",
                                "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election"
                            },
                            "value": 3
                        },
                        {
                            "name": "refreshFrequency",
                            "type": "integer",
                            "display": {
                                "name": "Refresh Frequency",
                                "description": "The amount of time in seconds after which metadata is refreshed in the background. Set 0 to disable it."
                            },
                            "value": 40
                        }
                    ],
                    "outputs": [],
                    "inputs": [],
                    "handler": {
                        "settings": []
                    },
                    "reply": [],
                    "s3Prefix": "Tibco",
                    "key": "Tibco/Kafka/connector/kafka/connector.json",
                    "display": {
                        "category": "Kafka",
                        "smallIcon": "icons/kafka.png",
                        "largeIcon": "icons/kafka.png"
                    },
                    "actions": [
                        {
                            "name": "Save",
                            "display": {
                                "readonly": false,
                                "valid": true,
                                "visible": true
                            }
                        }
                    ],
                    "feature": {},
                    "loopType": "none",
                    "loopSettings": [],
                    "retrySettings": [],
                    "propertyMap": {},
                    "keyfield": "name",
                    "iteratorAccumulate": false,
                    "isValid": true,
                    "lastUpdatedTime": 1582205006184,
                    "user": "flogo",
                    "connectorName": "IoTKafka",
                    "connectorDescription": "Apache Kafka client configuration"
                }
            },
            "id": "KafkaConsumer",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "=$property[\"KafkaTrigger.Topic\"]",
                        "consumerGroup": "=$property[\"KafkaTrigger.ConsumerGroupId\"]",
                        "valueType": "JSON",
                        "commitInterval": "=$property[\"KafkaTrigger.CommitInterval\"]",
                        "initialOffset": "=$property[\"KafkaTrigger.InitialOffset\"]",
                        "fetchMinBytes": "=$property[\"KafkaTrigger.FetchMinBytes\"]",
                        "fetchMaxWait": "=$property[\"KafkaTrigger.FetchMaxWait\"]",
                        "heartbeatInterval": "=$property[\"KafkaTrigger.HeartbeatInterval\"]",
                        "sessionTimeout": "=$property[\"KafkaTrigger.SessionTimeout\"]"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ProcessSensorReadingsGateway"
                        },
                        "input": {
                            "jsonValue": "=$.jsonValue"
                        }
                    },
                    "schemas": {
                        "output": {
                            "jsonValue": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "{\n   \"id\":\"5c5f4beb0e3608000114b459\",\n   \"pushed\":0,\n   \"device\":\"ArgonParticle01\",\n   \"created\":1549749227499,\n   \"modified\":0,\n   \"origin\":0,\n   \"schedule\":null,\n   \"event\":null,\n   \"gateway\":\"gtwyname\",\n   \"readings\":[\n      {\n         \"id\":\"5c5f4beb0e3608000114b45a\",\n         \"pushed\":0,\n         \"created\":1549749227499,\n         \"origin\":1549749227486,\n         \"modified\":0,\n         \"device\":\"ArgonParticle01\",\n         \"name\":\"LightSensor\",\n         \"value\":\"1080\"\n      }\n   ]\n}"
                            }
                        }
                    },
                    "name": "ProcessSensorReadingsGateway"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:ProcessSensorReadingsGateway",
            "data": {
                "name": "ProcessSensorReadingsGateway",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "LogFiltered",
                        "type": "expression",
                        "label": "LogMessage to LogMessage1",
                        "value": "string.len($property[\"Filtering.DeviceNames\"]) > 0 && string.contains($property[\"Filtering.DeviceNames\"], $flow.jsonValue.device)"
                    },
                    {
                        "id": 2,
                        "from": "LogFiltered",
                        "to": "ReturnFiltered",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "LogNonFiltered",
                        "type": "exprOtherwise",
                        "label": "LogMessage to LogMessage1"
                    },
                    {
                        "id": 4,
                        "from": "LogNonFiltered",
                        "to": "Accumulator",
                        "type": "expression",
                        "label": "LogNonFiltered to ",
                        "value": "array.count($flow.jsonValue.readings) > 1"
                    },
                    {
                        "id": 5,
                        "from": "Accumulator",
                        "to": "BuildGraph",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "BuildGraph",
                        "to": "DgraphUpsert",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "DgraphUpsert",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogNonFiltered",
                        "to": "AccumulatorSimple",
                        "type": "exprOtherwise",
                        "label": "LogNonFiltered to "
                    },
                    {
                        "id": 9,
                        "from": "AccumulatorSimple",
                        "to": "BuildGraphSimple",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "BuildGraphSimple",
                        "to": "DgraphUpsertSimple",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "DgraphUpsertSimple",
                        "to": "ReturnSimple",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "=\"Processing msg: \" + $flow.jsonValue"
                            }
                        }
                    },
                    {
                        "id": "LogFiltered",
                        "name": "LogFiltered",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "Message Filtered"
                            }
                        }
                    },
                    {
                        "id": "ReturnFiltered",
                        "name": "ReturnFiltered",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "LogNonFiltered",
                        "name": "LogNonFiltered",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "Message Non Filtered"
                            }
                        }
                    },
                    {
                        "id": "Accumulator",
                        "name": "Accumulator",
                        "description": "Accumulate tuple then release them as a batch",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$flow.jsonValue.readings",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#accumulator",
                            "settings": {
                                "ArrayMode": false,
                                "WindowSize": 40,
                                "DataFields": "[{\"Name\":\"id\",\"Type\":\"String\"},{\"Name\":\"device\",\"Type\":\"String\"},{\"Name\":\"origin\",\"Type\":\"Long\"},{\"Name\":\"name\",\"Type\":\"String\"},{\"Name\":\"value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Input": {
                                    "mapping": {
                                        "id": "=$iteration[value].id",
                                        "device": "=$iteration[value].device",
                                        "origin": "=$iteration[value].origin",
                                        "name": "=$iteration[value].name",
                                        "value": "=$iteration[value].value"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"id\":\"2\",\"device\":\"2\",\"origin\":2,\"name\":\"2\",\"value\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"LastElement\":{\"type\":\"boolean\"}}}}",
                                        "fe_metadata": "[{\"id\":\"2\",\"device\":\"2\",\"origin\":2,\"name\":\"2\",\"value\":\"2\",\"LastElement\":true}]"
                                    }
                                },
                                "settings": {
                                    "DataFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"id\",\"Type\":\"String\"},{\"Name\":\"device\",\"Type\":\"String\"},{\"Name\":\"origin\",\"Type\":\"Long\"},{\"Name\":\"name\",\"Type\":\"String\"},{\"Name\":\"value\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "BuildGraph",
                        "name": "BuildGraph",
                        "description": "This activity build graph from incoming data",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[Accumulator].Output",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#builder",
                            "settings": {
                                "GraphModel": {
                                    "id": "40adabf0-37c5-11ea-8564-ff83002a1240",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-graph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Graph",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder/connector/graph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Name",
                                                "description": "Name of the graph"
                                            },
                                            "value": "IoTGraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Graph description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "modelSource",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Source",
                                                "description": "Where the model stored",
                                                "type": "string"
                                            },
                                            "allowed": [
                                                "Local File",
                                                "TGDB"
                                            ],
                                            "value": "Local File"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Server URL",
                                                "description": "URL to the model server, ex. http://localhost:9999/tgdb/metadata",
                                                "type": "string",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "model",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Model",
                                                "description": "Define nodes and entities for a graph",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".tgbm",
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": {
                                                "filename": "IotModel.json",
                                                "content": "data:application/json;base64,ewoJIm5vZGVzIjogWwoJCXsKCQkJIm5hbWUiOiAicmVhZGluZ25vZGUiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogInV1aWQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAicmVhZGluZyIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ2YWx1ZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJjcmVhdGVkIiwKCQkJCQkidHlwZSI6ICJMb25nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ0eXBlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9CgkJCV0KCQl9LAoJCXsKCQkJIm5hbWUiOiAicmVzb3VyY2Vub2RlIiwKCQkJImtleSI6IFsKCQkJCSJ1dWlkIgoJCQldLAoJCQkiYXR0cmlidXRlcyI6IFsKCQkJCXsKCQkJCQkibmFtZSI6ICJ1dWlkIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInJlc291cmNlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIm5hbWUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidHlwZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfQoJCQldCgkJfSwKCQl7CgkJCSJuYW1lIjogImRldmljZW5vZGUiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogInV1aWQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiZGV2aWNlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIm5hbWUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAib3BlcmF0aW5nU3RhdGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiYWRtaW5TdGF0ZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJkZXNjcmlwdGlvbiIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ0eXBlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9CgkJCV0KCQl9LAoJCXsKCQkJIm5hbWUiOiAiZ2F0ZXdheW5vZGUiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogImdhdGV3YXkiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidXJsIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInV1aWQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibGF0aXR1ZGUiLAoJCQkJCSJ0eXBlIjogIkRvdWJsZSIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibG9uZ2l0dWRlIiwKCQkJCQkidHlwZSI6ICJEb3VibGUiCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImNyZWF0ZWR0cyIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ1cGRhdGVkdHMiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidHlwZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfQoJCQldCgkJfQoJXSwKCSJlZGdlcyI6IFsKCQl7CgkJCSJ0byI6ICJkZXZpY2Vub2RlIiwKCQkJIm5hbWUiOiAiZ2F0ZXdheV9kZXZpY2UiLAoJCQkiZnJvbSI6ICJnYXRld2F5bm9kZSIsCgkJCSJkaXJlY3Rpb24iIDogMgoJCX0sCgkJewoJCQkidG8iOiAicmVzb3VyY2Vub2RlIiwKCQkJIm5hbWUiOiAiZGV2aWNlX3Jlc291cmNlIiwKCQkJImZyb20iOiAiZGV2aWNlbm9kZSIKCQl9LAoJCXsKCQkJInRvIjogInJlYWRpbmdub2RlIiwKCQkJIm5hbWUiOiAicmVzb3VyY2VfcmVhZGluZyIsCgkJCSJmcm9tIjogInJlc291cmNlbm9kZSIKCQl9CgldCn0="
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder/connector/graph/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder",
                                        "visible": true,
                                        "smallIcon": "graph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1611178723601,
                                    "user": "flogo",
                                    "connectorName": "IoTGraph",
                                    "connectorDescription": " "
                                },
                                "BatchMode": true,
                                "Multiinstances": ""
                            },
                            "input": {
                                "BatchEnd": "=$iteration[value].LastElement",
                                "Nodes": {
                                    "mapping": [
                                        {
                                            "reading": [
                                                {
                                                    "uuid": "=$iteration[value].id",
                                                    "reading": "reading",
                                                    "value": "=$iteration[value].value",
                                                    "created": "=$iteration[value].origin",
                                                    "type": "reading"
                                                }
                                            ],
                                            "resource": [
                                                {
                                                    "resource": "resource",
                                                    "name": "=$iteration[value].name",
                                                    "type": "resource",
                                                    "uuid": "=string.concat($iteration[value].device, '_', $iteration[value].name)"
                                                }
                                            ],
                                            "device": [
                                                {
                                                    "uuid": "=$iteration[value].device",
                                                    "device": "device",
                                                    "name": "=$iteration[value].device",
                                                    "type": "device"
                                                }
                                            ],
                                            "gateway": [
                                                {
                                                    "gateway": "gateway",
                                                    "uuid": "=$flow.jsonValue.gateway",
                                                    "type": "gateway"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "Edges": {
                                    "mapping": [
                                        {
                                            "gateway_device": [],
                                            "device_resource": [],
                                            "resource_reading": []
                                        }
                                    ]
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Nodes": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"reading\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"uuid\":{\"type\":\"string\"},\"reading\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"type\":{\"type\":\"string\"}}}},\"resource\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"uuid\":{\"type\":\"string\"},\"resource\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}},\"device\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"uuid\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"operatingState\":{\"type\":\"string\"},\"adminState\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}},\"gateway\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"gateway\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"},\"uuid\":{\"type\":\"string\"},\"latitude\":{\"type\":\"number\"},\"longitude\":{\"type\":\"number\"},\"createdts\":{\"type\":\"string\"},\"updatedts\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}}",
                                        "fe_metadata": "[{\"reading\":[{\"_skipCondition\":false,\"uuid\":\"2\",\"reading\":\"2\",\"value\":\"2\",\"created\":2,\"type\":\"2\"}],\"resource\":[{\"_skipCondition\":false,\"uuid\":\"2\",\"resource\":\"2\",\"name\":\"2\",\"type\":\"2\"}],\"device\":[{\"_skipCondition\":false,\"uuid\":\"2\",\"device\":\"2\",\"name\":\"2\",\"operatingState\":\"2\",\"adminState\":\"2\",\"description\":\"2\",\"type\":\"2\"}],\"gateway\":[{\"_skipCondition\":false,\"gateway\":\"2\",\"url\":\"2\",\"uuid\":\"2\",\"latitude\":2,\"longitude\":2,\"createdts\":\"2\",\"updatedts\":\"2\",\"type\":\"2\"}]}]"
                                    },
                                    "Edges": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"gateway_device\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"vertices\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"from\":{\"type\":\"string\"},\"to\":{\"type\":\"string\"}}}}}}},\"device_resource\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"vertices\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"from\":{\"type\":\"string\"},\"to\":{\"type\":\"string\"}}}}}}},\"resource_reading\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"vertices\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"from\":{\"type\":\"string\"},\"to\":{\"type\":\"string\"}}}}}}}}}}",
                                        "fe_metadata": "[{\"gateway_device\":[{\"_skipCondition\":false,\"vertices\":[{\"from\":\"string\",\"to\":\"string\"}]}],\"device_resource\":[{\"_skipCondition\":false,\"vertices\":[{\"from\":\"string\",\"to\":\"string\"}]}],\"resource_reading\":[{\"_skipCondition\":false,\"vertices\":[{\"from\":\"string\",\"to\":\"string\"}]}]}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "DgraphUpsert",
                        "name": "DgraphUpsert",
                        "description": "This activity upsert to Dgraph",
                        "activity": {
                            "ref": "#dgraphupsert",
                            "settings": {
                                "dgraphConnection": {
                                    "id": "1be74d80-5403-11ea-a293-73298142a997",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-dgraph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Dgraph Connector",
                                    "description": "This is Dgraph connector",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_dgraph/connector/dgraph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "description": "Name of the connection"
                                            },
                                            "value": "IoTDgraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "apiVersion",
                                            "type": "string",
                                            "required": true,
                                            "allowed": [
                                                "v1",
                                                "v2"
                                            ],
                                            "display": {
                                                "name": "API Version",
                                                "description": "Dgraph dgo API Version",
                                                "type": "string"
                                            },
                                            "value": "v2"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Dgraph Server URL",
                                                "description": "Dgraph server URL ex. localhost:9080",
                                                "type": "string",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Dgraph_Server_URL\"]"
                                        },
                                        {
                                            "name": "tlsEnabled",
                                            "type": "boolean",
                                            "display": {
                                                "name": "TLS Enabled",
                                                "description": "Will use tls connection"
                                            },
                                            "value": false,
                                            "required": true
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "display": {
                                                "name": "Username",
                                                "description": "Username for login to Dgraph server",
                                                "type": "string",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Username\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "description": "Password for login to Dgraph server",
                                                "type": "password",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Password\"]"
                                        },
                                        {
                                            "name": "tls",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "TLS Configuration",
                                                "description": "Configuration file for TLS",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schemaGen",
                                            "type": "string",
                                            "display": {
                                                "name": "Schema Generation",
                                                "description": "How to generate schema"
                                            },
                                            "value": "no",
                                            "allowed": [
                                                "default",
                                                "file",
                                                "no"
                                            ],
                                            "required": true
                                        },
                                        {
                                            "name": "schema",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Graph Schema",
                                                "description": "Define schema for queries",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".dschema"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": {
                                                "filename": "IotSchema.dschema",
                                                "content": "data:application/octet-stream;base64,ewogICAidXVpZCIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIgICwKICAgICAgICJpbmRleCIgOiBbImV4YWN0IiwgInRlcm0iXQogICB9LAogICAidXJsIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAibGF0aXR1ZGUiIDogewogICAgICAgInR5cGUiICA6ICJmbG9hdCIKICAgfSwKICAgImxvbmdpdHVkZSIgOiB7CiAgICAgICAidHlwZSIgIDogImZsb2F0IgogICB9LAogICAiY3JlYXRlZHRzIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiZGF0ZVRpbWUiCiAgIH0sCiAgICJ1cGRhdGVkdHMiIDogewogICAgICAgInR5cGUiICA6ICJkYXRlVGltZSIKICAgfSwKICAgIm5hbWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJvcGVydGluZ1N0YXRlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiYWRtaW5TdGF0ZSIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIKICAgfSwKICAgImRlc2NyaXB0aW9uIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAidmFsdWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJjcmVhdGVkIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiaW50IiwKICAgICAgICJpbmRleCIgOiBbImludCJdCiAgIH0sCiAgICJnYXRld2F5IiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZGV2aWNlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAicmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJyZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZ2F0ZXdheV9kZXZpY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJkZXZpY2VfcmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJyZXNvdXJjZV9yZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9LAogICAiZ2F0ZXdheV9ydWxlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9Cn0="
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_dgraph/connector/dgraph/connector.json",
                                    "display": {
                                        "description": "This is Dgraph connector",
                                        "category": "GraphBuilder_dgraph",
                                        "visible": true,
                                        "smallIcon": "dgraph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583852319243,
                                    "user": "flogo",
                                    "connectorName": "IoTDgraph",
                                    "connectorDescription": " "
                                },
                                "cacheSize": 200,
                                "readableExternalId": true,
                                "explicitType": true,
                                "typeTag": "type",
                                "attrWithPrefix": false
                            },
                            "input": {
                                "Graph": "=$activity[BuildGraph].Graph"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "AccumulatorSimple",
                        "name": "AccumulatorSimple",
                        "description": "Accumulate tuple then release them as a batch",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$flow.jsonValue.readings",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#accumulator",
                            "settings": {
                                "ArrayMode": false,
                                "WindowSize": 1,
                                "DataFields": "[{\"Name\":\"id\",\"Type\":\"String\"},{\"Name\":\"device\",\"Type\":\"String\"},{\"Name\":\"origin\",\"Type\":\"Long\"},{\"Name\":\"name\",\"Type\":\"String\"},{\"Name\":\"value\",\"Type\":\"String\"}]"
                            },
                            "input": {
                                "Input": {
                                    "mapping": {
                                        "id": "=$iteration[value].id",
                                        "device": "=$iteration[value].device",
                                        "origin": "=$iteration[value].origin",
                                        "name": "=$iteration[value].name",
                                        "value": "=$iteration[value].value"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"id\":\"2\",\"device\":\"2\",\"origin\":2,\"name\":\"2\",\"value\":\"2\"}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"LastElement\":{\"type\":\"boolean\"}}}}",
                                        "fe_metadata": "[{\"id\":\"2\",\"device\":\"2\",\"origin\":2,\"name\":\"2\",\"value\":\"2\",\"LastElement\":true}]"
                                    }
                                },
                                "settings": {
                                    "DataFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}",
                                        "fe_metadata": "[{\"Name\":\"id\",\"Type\":\"String\"},{\"Name\":\"device\",\"Type\":\"String\"},{\"Name\":\"origin\",\"Type\":\"Long\"},{\"Name\":\"name\",\"Type\":\"String\"},{\"Name\":\"value\",\"Type\":\"String\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "BuildGraphSimple",
                        "name": "BuildGraphSimple",
                        "description": "This activity build graph from incoming data",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[AccumulatorSimple].Output",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#builder",
                            "settings": {
                                "GraphModel": {
                                    "id": "40adabf0-37c5-11ea-8564-ff83002a1240",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-graph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Graph",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder/connector/graph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Name",
                                                "description": "Name of the graph"
                                            },
                                            "value": "IoTGraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Graph description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "modelSource",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Source",
                                                "description": "Where the model stored",
                                                "type": "string"
                                            },
                                            "allowed": [
                                                "Local File",
                                                "TGDB"
                                            ],
                                            "value": "Local File"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Model Server URL",
                                                "description": "URL to the model server, ex. http://localhost:9999/tgdb/metadata",
                                                "type": "string",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "model",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Graph Model",
                                                "description": "Define nodes and entities for a graph",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".tgbm",
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": {
                                                "filename": "IotModel.json",
                                                "content": "data:application/json;base64,ewoJIm5vZGVzIjogWwoJCXsKCQkJIm5hbWUiOiAicmVhZGluZ25vZGUiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogInV1aWQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAicmVhZGluZyIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ2YWx1ZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJjcmVhdGVkIiwKCQkJCQkidHlwZSI6ICJMb25nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ0eXBlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9CgkJCV0KCQl9LAoJCXsKCQkJIm5hbWUiOiAicmVzb3VyY2Vub2RlIiwKCQkJImtleSI6IFsKCQkJCSJ1dWlkIgoJCQldLAoJCQkiYXR0cmlidXRlcyI6IFsKCQkJCXsKCQkJCQkibmFtZSI6ICJ1dWlkIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInJlc291cmNlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIm5hbWUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidHlwZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfQoJCQldCgkJfSwKCQl7CgkJCSJuYW1lIjogImRldmljZW5vZGUiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogInV1aWQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiZGV2aWNlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIm5hbWUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAib3BlcmF0aW5nU3RhdGUiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAiYWRtaW5TdGF0ZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJkZXNjcmlwdGlvbiIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ0eXBlIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9CgkJCV0KCQl9LAoJCXsKCQkJIm5hbWUiOiAiZ2F0ZXdheW5vZGUiLAoJCQkia2V5IjogWwoJCQkJInV1aWQiCgkJCV0sCgkJCSJhdHRyaWJ1dGVzIjogWwoJCQkJewoJCQkJCSJuYW1lIjogImdhdGV3YXkiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidXJsIiwKCQkJCQkidHlwZSI6ICJTdHJpbmciCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogInV1aWQiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibGF0aXR1ZGUiLAoJCQkJCSJ0eXBlIjogIkRvdWJsZSIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAibG9uZ2l0dWRlIiwKCQkJCQkidHlwZSI6ICJEb3VibGUiCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogImNyZWF0ZWR0cyIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfSwKCQkJCXsKCQkJCQkibmFtZSI6ICJ1cGRhdGVkdHMiLAoJCQkJCSJ0eXBlIjogIlN0cmluZyIKCQkJCX0sCgkJCQl7CgkJCQkJIm5hbWUiOiAidHlwZSIsCgkJCQkJInR5cGUiOiAiU3RyaW5nIgoJCQkJfQoJCQldCgkJfQoJXSwKCSJlZGdlcyI6IFsKCQl7CgkJCSJ0byI6ICJkZXZpY2Vub2RlIiwKCQkJIm5hbWUiOiAiZ2F0ZXdheV9kZXZpY2UiLAoJCQkiZnJvbSI6ICJnYXRld2F5bm9kZSIsCgkJCSJkaXJlY3Rpb24iIDogMgoJCX0sCgkJewoJCQkidG8iOiAicmVzb3VyY2Vub2RlIiwKCQkJIm5hbWUiOiAiZGV2aWNlX3Jlc291cmNlIiwKCQkJImZyb20iOiAiZGV2aWNlbm9kZSIKCQl9LAoJCXsKCQkJInRvIjogInJlYWRpbmdub2RlIiwKCQkJIm5hbWUiOiAicmVzb3VyY2VfcmVhZGluZyIsCgkJCSJmcm9tIjogInJlc291cmNlbm9kZSIKCQl9CgldCn0="
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder/connector/graph/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder",
                                        "visible": true,
                                        "smallIcon": "graph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1611178723601,
                                    "user": "flogo",
                                    "connectorName": "IoTGraph",
                                    "connectorDescription": " "
                                },
                                "BatchMode": true,
                                "Multiinstances": ""
                            },
                            "input": {
                                "BatchEnd": "=$iteration[value].LastElement",
                                "Nodes": {
                                    "mapping": [
                                        {
                                            "reading": [
                                                {
                                                    "reading": "reading",
                                                    "type": "reading",
                                                    "uuid": "=$iteration[value].id",
                                                    "value": "=$iteration[value].value",
                                                    "created": "=$iteration[value].origin"
                                                }
                                            ],
                                            "resource": [
                                                {
                                                    "resource": "resource",
                                                    "type": "resource",
                                                    "uuid": "=string.concat($iteration[value].device, '_', $iteration[value].name)",
                                                    "name": "=$iteration[value].name"
                                                }
                                            ],
                                            "device": [
                                                {
                                                    "device": "device",
                                                    "type": "device",
                                                    "uuid": "=$iteration[value].device",
                                                    "name": "=$iteration[value].device"
                                                }
                                            ],
                                            "gateway": [
                                                {
                                                    "gateway": "gateway",
                                                    "type": "gateway",
                                                    "uuid": "=$flow.jsonValue.gateway"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "Edges": {
                                    "mapping": [
                                        {
                                            "gateway_device": [],
                                            "device_resource": [],
                                            "resource_reading": []
                                        }
                                    ]
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Nodes": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"reading\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"uuid\":{\"type\":\"string\"},\"reading\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"type\":{\"type\":\"string\"}}}},\"resource\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"uuid\":{\"type\":\"string\"},\"resource\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}},\"device\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"uuid\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"operatingState\":{\"type\":\"string\"},\"adminState\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}},\"gateway\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"gateway\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"},\"uuid\":{\"type\":\"string\"},\"latitude\":{\"type\":\"number\"},\"longitude\":{\"type\":\"number\"},\"createdts\":{\"type\":\"string\"},\"updatedts\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}}",
                                        "fe_metadata": "[{\"reading\":[{\"_skipCondition\":false,\"uuid\":\"2\",\"reading\":\"2\",\"value\":\"2\",\"created\":2,\"type\":\"2\"}],\"resource\":[{\"_skipCondition\":false,\"uuid\":\"2\",\"resource\":\"2\",\"name\":\"2\",\"type\":\"2\"}],\"device\":[{\"_skipCondition\":false,\"uuid\":\"2\",\"device\":\"2\",\"name\":\"2\",\"operatingState\":\"2\",\"adminState\":\"2\",\"description\":\"2\",\"type\":\"2\"}],\"gateway\":[{\"_skipCondition\":false,\"gateway\":\"2\",\"url\":\"2\",\"uuid\":\"2\",\"latitude\":2,\"longitude\":2,\"createdts\":\"2\",\"updatedts\":\"2\",\"type\":\"2\"}]}]"
                                    },
                                    "Edges": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"gateway_device\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"vertices\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"from\":{\"type\":\"string\"},\"to\":{\"type\":\"string\"}}}}}}},\"device_resource\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"vertices\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"from\":{\"type\":\"string\"},\"to\":{\"type\":\"string\"}}}}}}},\"resource_reading\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"_skipCondition\":{\"type\":\"boolean\"},\"vertices\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"from\":{\"type\":\"string\"},\"to\":{\"type\":\"string\"}}}}}}}}}}",
                                        "fe_metadata": "[{\"gateway_device\":[{\"_skipCondition\":false,\"vertices\":[{\"from\":\"string\",\"to\":\"string\"}]}],\"device_resource\":[{\"_skipCondition\":false,\"vertices\":[{\"from\":\"string\",\"to\":\"string\"}]}],\"resource_reading\":[{\"_skipCondition\":false,\"vertices\":[{\"from\":\"string\",\"to\":\"string\"}]}]}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "DgraphUpsertSimple",
                        "name": "DgraphUpsertSimple",
                        "description": "This activity upsert to Dgraph",
                        "activity": {
                            "ref": "#dgraphupsert",
                            "settings": {
                                "dgraphConnection": {
                                    "id": "1be74d80-5403-11ea-a293-73298142a997",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-dgraph",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Dgraph Connector",
                                    "description": "This is Dgraph connector",
                                    "ref": "github.com/TIBCOSoftware/GraphBuilder_dgraph/connector/dgraph",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "description": "Name of the connection"
                                            },
                                            "value": "IoTDgraph"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "apiVersion",
                                            "type": "string",
                                            "required": true,
                                            "allowed": [
                                                "v1",
                                                "v2"
                                            ],
                                            "display": {
                                                "name": "API Version",
                                                "description": "Dgraph dgo API Version",
                                                "type": "string"
                                            },
                                            "value": "v2"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Dgraph Server URL",
                                                "description": "Dgraph server URL ex. localhost:9080",
                                                "type": "string",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Dgraph_Server_URL\"]"
                                        },
                                        {
                                            "name": "tlsEnabled",
                                            "type": "boolean",
                                            "display": {
                                                "name": "TLS Enabled",
                                                "description": "Will use tls connection"
                                            },
                                            "value": false,
                                            "required": true
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "display": {
                                                "name": "Username",
                                                "description": "Username for login to Dgraph server",
                                                "type": "string",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Username\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "description": "Password for login to Dgraph server",
                                                "type": "password",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            },
                                            "value": "=$property[\"GraphBuilder_dgraph.IoTDgraph.Password\"]"
                                        },
                                        {
                                            "name": "tls",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "TLS Configuration",
                                                "description": "Configuration file for TLS",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".json"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schemaGen",
                                            "type": "string",
                                            "display": {
                                                "name": "Schema Generation",
                                                "description": "How to generate schema"
                                            },
                                            "value": "no",
                                            "allowed": [
                                                "default",
                                                "file",
                                                "no"
                                            ],
                                            "required": true
                                        },
                                        {
                                            "name": "schema",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Graph Schema",
                                                "description": "Define schema for queries",
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".dschema"
                                                ],
                                                "readonly": false,
                                                "valid": true,
                                                "visible": false
                                            },
                                            "value": {
                                                "filename": "IotSchema.dschema",
                                                "content": "data:application/octet-stream;base64,ewogICAidXVpZCIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIgICwKICAgICAgICJpbmRleCIgOiBbImV4YWN0IiwgInRlcm0iXQogICB9LAogICAidXJsIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAibGF0aXR1ZGUiIDogewogICAgICAgInR5cGUiICA6ICJmbG9hdCIKICAgfSwKICAgImxvbmdpdHVkZSIgOiB7CiAgICAgICAidHlwZSIgIDogImZsb2F0IgogICB9LAogICAiY3JlYXRlZHRzIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiZGF0ZVRpbWUiCiAgIH0sCiAgICJ1cGRhdGVkdHMiIDogewogICAgICAgInR5cGUiICA6ICJkYXRlVGltZSIKICAgfSwKICAgIm5hbWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJvcGVydGluZ1N0YXRlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiYWRtaW5TdGF0ZSIgOiB7CiAgICAgICAidHlwZSIgIDogInN0cmluZyIKICAgfSwKICAgImRlc2NyaXB0aW9uIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAidmFsdWUiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJjcmVhdGVkIiA6IHsKICAgICAgICJ0eXBlIiAgOiAiaW50IiwKICAgICAgICJpbmRleCIgOiBbImludCJdCiAgIH0sCiAgICJnYXRld2F5IiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZGV2aWNlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAicmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJzdHJpbmciCiAgIH0sCiAgICJyZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAic3RyaW5nIgogICB9LAogICAiZ2F0ZXdheV9kZXZpY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJkZXZpY2VfcmVzb3VyY2UiIDogewogICAgICAgInR5cGUiICA6ICJ1aWQiICwKICAgICAgICJleHRyYUZsYWdzIiA6IFsicmV2ZXJzZSIsICJjb3VudCJdCiAgIH0sCiAgICJyZXNvdXJjZV9yZWFkaW5nIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9LAogICAiZ2F0ZXdheV9ydWxlIiA6IHsKICAgICAgICJ0eXBlIiAgOiAidWlkIiAsCiAgICAgICAiZXh0cmFGbGFncyIgOiBbInJldmVyc2UiLCAiY291bnQiXQogICB9Cn0="
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_dgraph/connector/dgraph/connector.json",
                                    "display": {
                                        "description": "This is Dgraph connector",
                                        "category": "GraphBuilder_dgraph",
                                        "visible": true,
                                        "smallIcon": "dgraph.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583852319243,
                                    "user": "flogo",
                                    "connectorName": "IoTDgraph",
                                    "connectorDescription": " "
                                },
                                "cacheSize": 200,
                                "readableExternalId": true,
                                "explicitType": true,
                                "typeTag": "type",
                                "attrWithPrefix": false
                            },
                            "input": {
                                "Graph": "=$activity[BuildGraphSimple].Graph"
                            }
                        }
                    },
                    {
                        "id": "ReturnSimple",
                        "name": "ReturnSimple",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "partition",
                            "type": "integer"
                        },
                        {
                            "name": "offset",
                            "type": "integer"
                        },
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "jsonValue",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"KafkaConsumer\",\"properties\":{\"topic\":{\"type\":\"string\",\"required\":false},\"partition\":{\"type\":\"integer\",\"required\":false},\"offset\":{\"type\":\"integer\",\"required\":false},\"key\":{\"type\":\"string\",\"required\":false},\"jsonValue\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}}}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "Kafka.IoTKafka.Brokers",
            "type": "string",
            "value": "localhost:9092"
        },
        {
            "name": "Kafka.IoTKafka.Connection_Timeout",
            "type": "float64",
            "value": 30
        },
        {
            "name": "Kafka.IoTKafka.Retry_Backoff",
            "type": "float64",
            "value": 250
        },
        {
            "name": "KafkaTrigger.Topic",
            "type": "string",
            "value": "EdgexGatewayData"
        },
        {
            "name": "KafkaTrigger.ConsumerGroupId",
            "type": "string",
            "value": "DgraphGroup"
        },
        {
            "name": "KafkaTrigger.CommitInterval",
            "type": "float64",
            "value": 5000
        },
        {
            "name": "KafkaTrigger.InitialOffset",
            "type": "string",
            "value": "Oldest"
        },
        {
            "name": "KafkaTrigger.FetchMinBytes",
            "type": "float64",
            "value": 1
        },
        {
            "name": "KafkaTrigger.FetchMaxWait",
            "type": "float64",
            "value": 500
        },
        {
            "name": "KafkaTrigger.HeartbeatInterval",
            "type": "float64",
            "value": 3000
        },
        {
            "name": "KafkaTrigger.SessionTimeout",
            "type": "float64",
            "value": 30000
        },
        {
            "name": "GraphBuilder_dgraph.IoTDgraph.Dgraph_Server_URL",
            "type": "string",
            "value": "a2c0b15e0059c11ea9265064cae82812-1704359995.us-west-2.elb.amazonaws.com:9080"
        },
        {
            "name": "GraphBuilder_dgraph.IoTDgraph.Username",
            "type": "string",
            "value": "admin"
        },
        {
            "name": "GraphBuilder_dgraph.IoTDgraph.Password",
            "type": "string",
            "value": "SECRET:z2Km9E2bNo5FkmGN15JQd63gL9uG"
        },
        {
            "name": "Filtering.DeviceNames",
            "type": "string",
            "value": " "
        },
        {
            "name": "Logging.LogLevel",
            "type": "string",
            "value": "DEBUG"
        }
    ],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL0dyYXBoQnVpbGRlcl9Ub29scyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9HcmFwaEJ1aWxkZXJfVG9vbHMifSx7InJlZiI6ImdpdGh1Yi5jb20vVElCQ09Tb2Z0d2FyZS9HcmFwaEJ1aWxkZXIiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vR3JhcGhCdWlsZGVyIn0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvR3JhcGhCdWlsZGVyX2RncmFwaCIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9HcmFwaEJ1aWxkZXJfZGdyYXBoIn0seyJyZWYiOiJnaXQudGliY28uY29tL2dpdC9wcm9kdWN0L2lwYWFzL3dpLXBsdWdpbnMuZ2l0L2NvbnRyaWJ1dGlvbnMva2Fma2Evc3JjL2FwcC9LYWZrYSIsInMzbG9jYXRpb24iOiJUaWJjby9LYWZrYSJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIAFqfNVKrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACABanzVSq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}